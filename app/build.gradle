apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'

android {
    compileSdk 34
    defaultConfig {
        applicationId "com.jamesmobiledev.dicom"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
    }


    signingConfigs {
        release {
            storeFile file('../signing/release.keystore')
            storePassword System.getenv("KEYSTORE_PASS")
            keyAlias System.getenv("ALIAS_NAME")
            keyPassword System.getenv("ALIAS_PASS")
        }
        debug {
            storePassword "android"
            keyPassword "android"
            keyAlias "androiddebugkey"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (System.getenv("CI_SERVER")) { // gitlab
                println "I run on Gitlab and use RELEASE signing"
                signingConfig signingConfigs.release
            } else if (file('../signing/release.keystore').exists()) {
                if (System.getenv("KEYSTORE_PASS") == null || System.getenv("ALIAS_NAME") == null || System.getenv("ALIAS_PASS") == null) {
                    println "I run somewhere else and I use DEBUG signing because variables are not set !"
                    signingConfig signingConfigs.debug
                } else {
                    println "I run somewhere else and I use RELEASE signing"
                    signingConfig signingConfigs.release
                }
            } else {
                println "I run somewhere else and I use debug signing"
                signingConfig signingConfigs.debug
            }
        }
//        debug {
//            if (System.getenv("CI") == "true") { // Github action
//                signingConfig signingConfigs.release
//            } else {
//                signingConfig signingConfigs.debug
//            }
//            applicationIdSuffix ".debug"
//            versionNameSuffix ".debug"
//        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.name == "release") {
                def builtType = variant.buildType.name
                def vName = variant.versionName
                def vCode = variant.versionCode
                // def flavor = variant.flavorName
                def newName = "ImebraDicom"
                newName += "-${vName}-${vCode}-${builtType}.apk"
                outputFileName = newName
            }
            println "$variant.name: name is $outputFileName"
        }
    }
    buildFeatures {
        viewBinding true
    }

    namespace 'com.jamesmobiledev.dicom'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.github.MikeOrtiz:TouchImageView:3.3'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation files('libs/dcm4che3.jar')

    //photoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    //Timber logger
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    // CameraX core library
    implementation "androidx.camera:camera-camera2:1.3.1" // use latest version
    implementation "androidx.camera:camera-lifecycle:1.3.1"
    implementation "androidx.camera:camera-view:1.3.4"

    //Glide
    implementation "com.github.bumptech.glide:glide:4.11.0"

    //Gson
    implementation "com.google.code.gson:gson:2.10"

}

